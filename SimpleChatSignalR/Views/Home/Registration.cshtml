@model Baza.User

@{
    ViewBag.Title = "Registration";
}
<h2 style="color:white; text-align:center">New account</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-xs-12" style="color:forestgreen">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-xs-12" })
            <div class="col-xs-12">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-xs-12" })
            <div class="col-xs-12">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone_number, htmlAttributes: new { @class = "control-label col-xs-12" })
            <div class="col-xs-12">
                @Html.EditorFor(model => model.Phone_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone_number, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-xs-12" })
            <div class="col-xs-12">
                <input type='file' size='60' id='file' style='color:white' />
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-xs-12" })
            <div class="col-xs-12">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-xs-12" })
            <div class="col-xs-12">
                @*@Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="password" class="form-control" id="Password" />
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-ms-offset-2 col-sm-10">
            <input type="button" value="Create" style="color:forestgreen" onclick="Create()" class="btn btn-default" />
        </div>
    </div>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    function Create() {
        userModel = new FormData();
        var userForm = $("#form");
        var file = $("#file");
        userModel.append($("#file")[0].files[0].name, $("#file")[0].files[0]);

        var userForm = $('form').serializeArray();
        var formObject = {};
        for (var i = 0; i < userForm.length; i++) {
            formObject[userForm[i]['name']] = userForm[i]['value'];
        }
        for (var key in formObject) {
            userModel.append(key, formObject[key]);
        }

        console.log(userModel);
        $.ajax({
            type: "POST",
            dataType: "json",
            url: "/Home/Registration",
            data: userModel,
            contentType: false,
            processData: false,
            success: function (data) {
                window.location.replace("/Home/Main_page");
            }
        });
    }
</script>
